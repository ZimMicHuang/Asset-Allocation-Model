loading = loading[,-1]
betas=loading[,"beta",drop=FALSE]
betas
loading = loading.icr
S = quantile(loading$Size)["75%"]
M = quantile(loading$Momentum)["75%"]
L = quantile(loading$Vol)["25%"]
Y = quantile(loading$Yield)["25%"]
loading = as.data.frame(loading.icr)
S = quantile(loading$Size)["75%"]
M = quantile(loading$Momentum)["75%"]
L = quantile(loading$Vol)["25%"]
Y = quantile(loading$Yield)["25%"]
B = quantile(loading$beta)["25%"]
B
Y
L
M
S
S = quantile(loading$Size)["75%"]
M = quantile(loading$Momentum)["75%"]
L = quantile(loading$Vol)["25%"]
Y = quantile(loading$Yield)["25%"]
B = quantile(loading$spx)["25%"]
secP = getSectorPrice()
secP.mat = as.data.frame(matrix(0,nrow = nrow(secP$IT.price),ncol=length(secP)))
colnames(secP.mat) = names(secP)
for (c in 1:ncol(secP.mat)) {
exp = parse(text=paste0("secP$",colnames(secP.mat)[c]))
price = eval(exp)
secP.mat[,c] = price
}
secRet = diff(as.matrix(secP.mat))
SIGMA = cov(secRet[last.3y,])
SIGMA
rownames(SIGMA)
rownames(loading)
sectors = c("IT","FIN","ENG","HLTH","CONS","COND","INDU","UTIL","TELS","MATR")
loading = as.data.frame(loading.icr)[sectors,]
loading
SIGMA
fn_ = function(x) {
return(
t(x) %*% SIGMA %*% x
#sum(x*loading$beta)
)
}
hin_ = function(x) {
# x is weights
h=numeric(7)
# Size exposure
h[1] = sum(x * loading$Size) - S
# Momentum exposure
h[2] = sum(x * loading$Momentum) - M
# Low Vol exposure
h[3] = L - sum(x * loading$Vol)
# High Yield exposure
h[4] = Y - sum(x * loading$Yield)
# Full investment
h[5] = sum(x) - 1
h[6] = 1 - sum(x)
# # Market exposure
# h[7] = B - sum(x*loading$spx)
return(h)
}
# > dim(SIGMA)
# [1] 10 10
x0_ = rep(0.05,times=10)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0,times=10))
require(nloptr)
require(quantmod)
require(lubridate)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0,times=10))
AA = round(Solution$par*100,2)
AA
names(AA) = sectors
sort(AA)
hist(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0,times=10),upper=rep(0.2,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
hin_ = function(x) {
# x is weights
h=numeric(7)
# Size exposure
h[1] = S-sum(x * loading$Size)
# Momentum exposure
h[2] = M - sum(x * loading$Momentum)
# Low Vol exposure
h[3] = sum(x * loading$Vol)-L
# High Yield exposure
h[4] = sum(x * loading$Yield) -Y
# Full investment
h[5] = sum(x) - 1
h[6] = 1 - sum(x)
# # Market exposure
# h[7] = B - sum(x*loading$spx)
return(h)
}
# > dim(SIGMA)
# [1] 10 10
x0_ = rep(0.05,times=10)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0,times=10),upper=rep(0.2,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
hin_ = function(x) {
# x is weights
h=numeric(7)
# Size exposure
h[1] = sum(x * loading$Size) - S
# Momentum exposure
h[2] = sum(x * loading$Momentum) - M
# Low Vol exposure
h[3] = L - sum(x * loading$Vol)
# High Yield exposure
h[4] = Y - sum(x * loading$Yield)
# Full investment
h[5] = sum(x) - 1
h[6] = 1 - sum(x)
# # Market exposure
# h[7] = B - sum(x*loading$spx)
return(h)
}
# > dim(SIGMA)
# [1] 10 10
x0_ = rep(0.05,times=10)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0,times=10),upper=rep(0.2,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.05,times=10),upper=rep(0.2,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.05,times=10),upper=rep(0.15,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.05,times=10),upper=rep(0.20,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
fn_ = function(x) {
return(
#t(x) %*% SIGMA %*% x
sum(x*loading$spx)
)
}
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.05,times=10),upper=rep(0.20,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
SIMGA
SIGMA
fn_ = function(x) {
return(
t(x) %*% SIGMA %*% x
#sum(x*loading$spx)
)
}
hin_ = function(x) {
# x is weights
h=numeric(7)
# Size exposure
h[1] = sum(x * loading$Size) - S
# Momentum exposure
h[2] = sum(x * loading$Momentum) - M
# Low Vol exposure
h[3] = L - sum(x * loading$Vol)
# High Yield exposure
h[4] = Y - sum(x * loading$Yield)
# Full investment
h[5] = sum(x) - 1
h[6] = 1 - sum(x)
# # Market exposure
# h[7] = B - sum(x*loading$spx)
return(h)
}
# > dim(SIGMA)
# [1] 10 10
x0_ = rep(0.05,times=10)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.05,times=10),upper=rep(0.20,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.03,times=10),upper=rep(0.20,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
write.csv("AA.csv")
write.csv(AA,"AA.csv")
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.03,times=10),upper=rep(0.35,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.03,times=10),upper=rep(0.35,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
write.csv(AA,"AA.csv")
head(smoothDat$IT)
plotLoading.icr = function(sector,df) {
# plot time series of factor loadings
# uses formula 1
dates = seq.Date(from=as.Date("2002-01-11"),length.out = 563,by="week")
name = as.name(sector)
exp = parse(text=paste("fm.ICR$",sector,"$coef",sep=""))
icr.coef = as.data.frame(eval(exp))
coef.mat = as.data.frame(t(icr.coef))
N = nrow(df)-261
M = 260
for (i in 1:N) {
ind_ = i:(i+M)
rsp.pr = getICR(df,ind=ind_)
coef.mat = rbind(coef.mat,t(rsp.pr$coef))
#print(dim(coef.mat))
}
##PLOT
cols = rainbow(ncol(coef.mat))
plot(x=dates,
y=coef.mat[,1],type="l",
ylim=c(-1.5,1.5),
main=sector,
lwd=2,
xlab="5 Year Period Starting",
ylab="Factor Exposures")
legend("topleft",legend = colnames(coef.mat),col=cols[1:ncol(coef.mat)],cex=1,pch=15)
for (i in 1:ncol(coef.mat)) {
lines(dates,coef.mat[,i],col=cols[i],lwd=2)
}
abline(0,0)
coef.mat
}
coef.IT = plotLoading.icr(sector="IT",df = smoothDat$IT)
coef.FIN = plotLoading.icr(sector="FIN",df = smoothDat$FIN)
coef.ENG = plotLoading.icr(sector="ENG",df = smoothDat$ENG)
coef.HLTH = plotLoading.icr(sector="HLTH",df = smoothDat$HLTH)
coef.CONS = plotLoading.icr(sector="CONS",df = smoothDat$CONS)
coef.COND = plotLoading.icr(sector="COND",df = smoothDat$COND)
coef.UTIL = plotLoading.icr(sector="UTIL",df = smoothDat$UTIL)
coef.INDU = plotLoading.icr(sector="INDU",df = smoothDat$INDU)
coef.MATR = plotLoading.icr(sector="MATR",df = smoothDat$MATR)
coef.TELS = plotLoading.icr(sector="TELS",df = smoothDat$TELS)
r.sq = lapply(fm.ICR,function(df) {summary(df$lm)$r.squared})
plotLoading.icr = function(sector,df) {
# plot time series of factor loadings
# uses formula 1
dates = seq.Date(from=as.Date("2002-01-18"),length.out = 562,by="week")
name = as.name(sector)
exp = parse(text=paste("fm.ICR$",sector,"$coef",sep=""))
icr.coef = as.data.frame(eval(exp))
coef.mat = as.data.frame(t(icr.coef))
N = nrow(df)-261
M = 260
for (i in 1:N) {
ind_ = i:(i+M)
rsp.pr = getICR(df,ind=ind_)
coef.mat = rbind(coef.mat,t(rsp.pr$coef))
#print(dim(coef.mat))
}
##PLOT
cols = rainbow(ncol(coef.mat))
plot(x=dates,
y=coef.mat[-1,1],type="l",
ylim=c(-1.5,1.5),
main=sector,
lwd=2,
xlab="5 Year Period Starting",
ylab="Factor Exposures")
legend("topleft",legend = colnames(coef.mat),col=cols[1:ncol(coef.mat)],cex=1,pch=15)
for (i in 1:ncol(coef.mat)) {
lines(dates,coef.mat[-1,i],col=cols[i],lwd=2)
}
abline(0,0)
coef.mat
}
coef.IT = plotLoading.icr(sector="IT",df = smoothDat$IT)
seq.Date(from=as.Date("2002-01-18"),length.out =9,by="week")
plotLoading.icr = function(sector,df) {
# plot time series of factor loadings
# uses formula 1
dates = seq.Date(from=as.Date("2002-03-15"),length.out = 553,by="week")
name = as.name(sector)
exp = parse(text=paste("fm.ICR$",sector,"$coef",sep=""))
icr.coef = as.data.frame(eval(exp))
coef.mat = as.data.frame(t(icr.coef))
N = nrow(df)-261
M = 260
for (i in 1:N) {
ind_ = i:(i+M)
rsp.pr = getICR(df,ind=ind_)
coef.mat = rbind(coef.mat,t(rsp.pr$coef))
#print(dim(coef.mat))
}
##PLOT
cols = rainbow(ncol(coef.mat))
plot(x=dates,
y=coef.mat[-(1:10),1],type="l",
ylim=c(-1.5,1.5),
main=sector,
lwd=2,
xlab="5 Year Period Starting",
ylab="Factor Exposures")
legend("topleft",legend = colnames(coef.mat),col=cols[1:ncol(coef.mat)],cex=1,pch=15)
for (i in 1:ncol(coef.mat)) {
lines(dates,coef.mat[-(1:10),i],col=cols[i],lwd=2)
}
abline(0,0)
coef.mat
}
coef.IT = plotLoading.icr(sector="IT",df = smoothDat$IT)
plotLoading.icr = function(sector,df) {
# plot time series of factor loadings
# uses formula 1
dates = seq.Date(from=as.Date("2002-03-15"),length.out = 551,by="week")
name = as.name(sector)
exp = parse(text=paste("fm.ICR$",sector,"$coef",sep=""))
icr.coef = as.data.frame(eval(exp))
coef.mat = as.data.frame(t(icr.coef))
N = nrow(df)-261
M = 260
for (i in 1:N) {
ind_ = i:(i+M)
rsp.pr = getICR(df,ind=ind_)
coef.mat = rbind(coef.mat,t(rsp.pr$coef))
#print(dim(coef.mat))
}
##PLOT
cols = rainbow(ncol(coef.mat))
plot(x=dates,
y=coef.mat[-(1:12),1],type="l",
ylim=c(-1.5,1.5),
main=sector,
lwd=2,
xlab="5 Year Period Starting",
ylab="Factor Exposures")
legend("topleft",legend = colnames(coef.mat),col=cols[1:ncol(coef.mat)],cex=1,pch=15)
for (i in 1:ncol(coef.mat)) {
lines(dates,coef.mat[-(1:12),i],col=cols[i],lwd=2)
}
abline(0,0)
coef.mat
}
coef.IT = plotLoading.icr(sector="IT",df = smoothDat$IT)
coef.IT = plotLoading.icr(sector="IT",df = smoothDat$IT)
coef.FIN = plotLoading.icr(sector="FIN",df = smoothDat$FIN)
coef.ENG = plotLoading.icr(sector="ENG",df = smoothDat$ENG)
coef.HLTH = plotLoading.icr(sector="HLTH",df = smoothDat$HLTH)
coef.CONS = plotLoading.icr(sector="CONS",df = smoothDat$CONS)
coef.COND = plotLoading.icr(sector="COND",df = smoothDat$COND)
coef.UTIL = plotLoading.icr(sector="UTIL",df = smoothDat$UTIL)
coef.INDU = plotLoading.icr(sector="INDU",df = smoothDat$INDU)
coef.MATR = plotLoading.icr(sector="MATR",df = smoothDat$MATR)
coef.TELS = plotLoading.icr(sector="TELS",df = smoothDat$TELS)
r.sq = lapply(fm.ICR,function(df) {summary(df$lm)$r.squared})
heatmap(loading.icr,col=cm.colors(100))
image(z=loading.icr)
image(loading.icr)
heatmap(loading.icr,col=cm.colors(100),keep.dendro = FALSE)
heatmap(loading.icr,col=cm.colors(100),scale="column",keep.dendro = FALSE)
heatmap(loading.icr,col=brewer.pal(9, "Blues"),scale="column",keep.dendro = FALSE)
heatmap(loading.icr,Rowv = NA,col=cm.colors(100),scale="column",keep.dendro = FALSE)
heatmap(loading.icr,Rowv = NA,Colv=NA,col=cm.colors(100),scale="column",keep.dendro = FALSE)
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
heatmap(loading.icr,Rowv = NA,Colv=NA,col=my_palette,scale="column",keep.dendro = FALSE)
heatmap(loading.icr,Rowv = NA,Colv=NA,col=cm.colors(100),scale="column",keep.dendro = FALSE)
heatmap(loading.icr,Rowv = NA,Colv=NA,col=terrain.colors(100),scale="column",keep.dendro = FALSE)
heatmap(loading.icr,Rowv = NA,Colv=NA,col=rainbow(100),scale="column",keep.dendro = FALSE)
heatmap(loading.icr,Rowv = NA,Colv=NA,col=topo.colors(100),scale="column",keep.dendro = FALSE)
heatmap(loading.icr,Rowv = NA,Colv=NA,col=heat.colors(100),scale="column",keep.dendro = FALSE)
heatmap(loading.icr,Rowv = NA,Colv=NA,col=cm.colors(100),scale="column",keep.dendro = FALSE)
heatmap(loading.icr,Rowv = NA,Colv=NA,col=cm.colors(100),scale="column",main="Factor Loading Heatmap")
heatmap(loading.icr,Rowv = NA,Colv=NA,density.info=loading.icr,col=cm.colors(100),scale="column",main="Factor Loading Heatmap")
heatmap.2(loading.icr,Rowv = NA,Colv=NA,density.info="",col=cm.colors(100),scale="column",main="Factor Loading Heatmap")
heatmap.2(loading.icr,Rowv = NA,Colv=NA,density.info="histogram",col=cm.colors(100),scale="column",main="Factor Loading Heatmap")
require(ggplot2)
heatmap.2(loading.icr,Rowv = NA,Colv=NA,density.info="histogram",col=cm.colors(100),scale="column",main="Factor Loading Heatmap")
install.packages("gplots")
require(gplots)
heatmap.2(loading.icr,Rowv = NA,Colv=NA,density.info="histogram",col=cm.colors(100),scale="column",main="Factor Loading Heatmap")
heatmap.2(loading.icr,Rowv = NA,Colv=NA,density.info="histogram",col=cm.colors(100),main="Factor Loading Heatmap")
heatmap.2(loading.icr,Rowv = NA,Colv=NA,col=cm.colors(100),main="Factor Loading Heatmap")
heatmap.2(loading.icr,Rowv = NA,Colv=NA,col=cm.colors(100),density.info="none",main="Factor Loading Heatmap")
heatmap.2(loading.icr,dendrogram="none",Rowv = NA,Colv=NA,col=cm.colors(100),density.info="none",main="Factor Loading Heatmap")
write.csv(r.sq,"tmp.csv")
require(nloptr)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.0,times=10),upper=rep(0.35,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.03,times=10),upper=rep(0.35,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
S = quantile(loading$Size)["75%"]
M = quantile(loading$Momentum)["75%"]
G = quantile(loading$Growth)["75%"]
Q = quantile(loading$Quality)["75%"]
V = quantile(loading$Value)["75%"]
L = quantile(loading$Vol)["25%"]
Y = quantile(loading$Yield)["25%"]
B = quantile(loading$spx)["25%"]
G
Q
V
L
Y
hin_ = function(x) {
# x is weights
h=numeric(12)
# Size exposure
h[1] = sum(x * loading$Size) - S
# Momentum exposure
h[2] = sum(x * loading$Momentum) - M
# Low Vol exposure
h[3] = L - sum(x * loading$Vol)
# High Yield exposure
h[4] = Y - sum(x * loading$Yield)
# Full investment
h[5] = sum(x) - 1
h[6] = 1 - sum(x)
# # Market exposure
# h[7] = B - sum(x*loading$spx)
# Value, Quality, Growth
h[8] = sum(x * loading$Value) - V
h[9] = sum(x * loading$Quality) - Q
h[10] = sum(x * loading$Growth) - G
return(h)
}
# > dim(SIGMA)
# [1] 10 10
x0_ = rep(0.05,times=10)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.03,times=10),upper=rep(0.35,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0,times=10),upper=rep(0.35,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_)
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0,times=10),upper=rep(0.35,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
hin_ = function(x) {
# x is weights
h=numeric(12)
# Size exposure
h[1] = sum(x * loading$Size) - S
# Momentum exposure
h[2] = sum(x * loading$Momentum) - M
# Low Vol exposure
h[3] = L - sum(x * loading$Vol)
# High Yield exposure
h[4] = Y - sum(x * loading$Yield)
# Full investment
h[5] = sum(x) - 1
h[6] = 1 - sum(x)
# # Market exposure
h[7] = B - sum(x*loading$spx)
# Value, Quality, Growth
h[8] = sum(x * loading$Value) - V
h[9] = sum(x * loading$Quality) - Q
h[10] = sum(x * loading$Growth) - G
return(h)
}
# > dim(SIGMA)
# [1] 10 10
x0_ = rep(0.05,times=10)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0,times=10),upper=rep(0.35,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
hin_ = function(x) {
# x is weights
h=numeric(12)
# Size exposure
h[1] = sum(x * loading$Size) - S
# Momentum exposure
h[2] = sum(x * loading$Momentum) - M
# Low Vol exposure
h[3] = L - sum(x * loading$Vol)
# High Yield exposure
h[4] = Y - sum(x * loading$Yield)
# Full investment
h[5] = sum(x) - 1
h[6] = 1 - sum(x)
# # Market exposure
h[7] = sum(x*loading$spx) - B
# Value, Quality, Growth
h[8] = sum(x * loading$Value) - V
h[9] = sum(x * loading$Quality) - Q
h[10] = sum(x * loading$Growth) - G
return(h)
}
# > dim(SIGMA)
# [1] 10 10
x0_ = rep(0.05,times=10)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0,times=10),upper=rep(0.35,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
Solution = cobyla(x0 = x0_,fn=fn_,hin=hin_,lower=rep(0.03,times=10),upper=rep(0.35,times=10))
AA = round(Solution$par*100,2)
names(AA) = sectors
sort(AA)
